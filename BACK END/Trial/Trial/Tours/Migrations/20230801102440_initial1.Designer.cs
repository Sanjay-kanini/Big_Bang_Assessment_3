// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tours.Context;

#nullable disable

namespace Tours.Migrations
{
    [DbContext(typeof(ToursContext))]
    [Migration("20230801102440_initial1")]
    partial class initial1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tours.Models.Add_Tour", b =>
                {
                    b.Property<int>("tour_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tour_id"));

                    b.Property<int>("costfor_two")
                        .HasColumnType("int");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_cusine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nearby_hotels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("tour_Agencytour_owner_id")
                        .HasColumnType("int");

                    b.Property<int>("tour_duration_days")
                        .HasColumnType("int");

                    b.Property<int>("tour_duration_nights")
                        .HasColumnType("int");

                    b.Property<string>("tour_location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tour_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tour_price")
                        .HasColumnType("int");

                    b.Property<string>("tour_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tour_id");

                    b.HasIndex("tour_Agencytour_owner_id");

                    b.ToTable("Add_Tours");
                });

            modelBuilder.Entity("Tours.Models.Admin", b =>
                {
                    b.Property<int>("admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("admin_id"));

                    b.Property<string>("email_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("admin_id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Tours.Models.Feedback", b =>
                {
                    b.Property<int>("feedback_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("feedback_id"));

                    b.Property<int?>("Add_Tourtour_id")
                        .HasColumnType("int");

                    b.Property<string>("feedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("feedback_id");

                    b.HasIndex("Add_Tourtour_id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Tours.Models.Itinerary", b =>
                {
                    b.Property<int>("itinerary_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("itinerary_id"));

                    b.Property<int?>("Add_Tourtour_id")
                        .HasColumnType("int");

                    b.Property<int>("day")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location_image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("itinerary_id");

                    b.HasIndex("Add_Tourtour_id");

                    b.ToTable("Itineraries");
                });

            modelBuilder.Entity("Tours.Models.Tour_agency", b =>
                {
                    b.Property<int>("tour_owner_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tour_owner_id"));

                    b.Property<string>("email_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tour_company_address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tour_company_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tour_owner_id");

                    b.ToTable("Tour_agency");
                });

            modelBuilder.Entity("Tours.Models.Add_Tour", b =>
                {
                    b.HasOne("Tours.Models.Tour_agency", "tour_Agency")
                        .WithMany("Add_Tours")
                        .HasForeignKey("tour_Agencytour_owner_id");

                    b.Navigation("tour_Agency");
                });

            modelBuilder.Entity("Tours.Models.Feedback", b =>
                {
                    b.HasOne("Tours.Models.Add_Tour", "Add_Tour")
                        .WithMany("feedbacks")
                        .HasForeignKey("Add_Tourtour_id");

                    b.Navigation("Add_Tour");
                });

            modelBuilder.Entity("Tours.Models.Itinerary", b =>
                {
                    b.HasOne("Tours.Models.Add_Tour", "Add_Tour")
                        .WithMany("itinerarys")
                        .HasForeignKey("Add_Tourtour_id");

                    b.Navigation("Add_Tour");
                });

            modelBuilder.Entity("Tours.Models.Add_Tour", b =>
                {
                    b.Navigation("feedbacks");

                    b.Navigation("itinerarys");
                });

            modelBuilder.Entity("Tours.Models.Tour_agency", b =>
                {
                    b.Navigation("Add_Tours");
                });
#pragma warning restore 612, 618
        }
    }
}
